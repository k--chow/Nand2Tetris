// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/Inc16.hdl

/**
 * 16-bit incrementer:
 * out = in + 1 (arithmetic addition);
 */

CHIP Inc16 {
    IN in[16];
    OUT out[16];

    PARTS:
   
   // half-add on lsb[0]. out[0] = sum
   HalfAdder(a=in[0], b=true, sum=s0, carry=c0);
   And(a=s0, b=s0, out=out[0]);
   // change out[1] if carry. full-add
   HalfAdder(a=in[1], b=c0, sum=s1, carry=c1);
   And(a=s1, b=s1, out=out[1]);
   HalfAdder(a=in[2], b=c1, sum=s2, carry=c2);
   And(a=s2, b=s2, out=out[2]);
   HalfAdder(a=in[3], b=c2, sum=s3, carry=c3);
   And(a=s3, b=s3, out=out[3]);
   HalfAdder(a=in[4], b=c3, sum=s4, carry=c4);
   And(a=s4, b=s4, out=out[4]);
   HalfAdder(a=in[5], b=c4, sum=s5, carry=c5);
   And(a=s5, b=s5, out=out[5]);
   HalfAdder(a=in[6], b=c5, sum=s6, carry=c6);
   And(a=s6, b=s6, out=out[6]);
   HalfAdder(a=in[7], b=c6, sum=s7, carry=c7);
   And(a=s7, b=s7, out=out[7]);
   HalfAdder(a=in[8], b=c7, sum=s8, carry=c8);
   And(a=s8, b=s8, out=out[8]);
   HalfAdder(a=in[9], b=c8, sum=s9, carry=c9);
   And(a=s9, b=s9, out=out[9]);
   HalfAdder(a=in[10], b=c9, sum=s10, carry=c10);
   And(a=s10, b=s10, out=out[10]);
   HalfAdder(a=in[11], b=c10, sum=s11, carry=c11);
   And(a=s11, b=s11, out=out[11]);
   HalfAdder(a=in[12], b=c11, sum=s12, carry=c12);
   And(a=s12, b=s12, out=out[12]);
   HalfAdder(a=in[13], b=c12, sum=s13, carry=c13);
   And(a=s13, b=s13, out=out[13]);
   HalfAdder(a=in[14], b=c13, sum=s14, carry=c14);
   And(a=s14, b=s14, out=out[14]);
   HalfAdder(a=in[15], b=c14, sum=s15, carry=c15);
   And(a=s15, b=s15, out=out[15]);


   // 011111 = 
   // 100000
}